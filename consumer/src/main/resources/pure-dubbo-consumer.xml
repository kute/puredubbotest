<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://code.alibabatech.com/schema/dubbo
                           http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <dubbo:application name="pure-service-consumer" />

    <dubbo:annotation package="com.kute.service.impl" />

    <!--
    集群容错模式：http://dubbo.apache.org/books/dubbo-user-book/demos/fault-tolerent-strategy.html
    负载均衡：http://dubbo.apache.org/books/dubbo-user-book/demos/loadbalance.html
    -->
    <dubbo:consumer cluster="failover" loadbalance="consistenthash" />

    <!-- check=true 注册中心启动时检查(注册订阅失败时报错) -->
    <dubbo:registry protocol="${dubbo.registry.protocol}" address="${dubbo.registry.address}" check="true" />

    <!--
    引用暴露的服务
    1. check=true: 表示在启动时检查依赖的服务是否可用，不可用会不可用时会抛出异常，阻止 Spring 初始化完成，默认true
    若 Spring 容器是懒加载的，则check设置为false
    2. retries=2 : 失败时重试
    3. mock:
     * 设置服务降级
     * mock参数值：
     *    false: 不降级
     *    true: 服务调用失败后，调用mock服务接口进行降级
     *    default: 服务调用失败后，调用mock服务接口进行降级
     *    forece: 强制 调用mock服务接口进行降级，无论 接口调用是否成功
     * mock服务接口类定义规则：接口+Mock，如 ICityServiceMock，注意 此类的package路径要和接口一致，如果不一致则需要直接在mock参数里指明 此类
     -->
    <dubbo:reference interface="com.kute.service.IUserService" id="userService" check="false" retries="2" cache="lru" mock="com.kute.service.mock.IUserServiceMock">
        <dubbo:method name="getUser" timeout="${dubbo.method.timeout}" retries="1" onthrow="tolerantService.getUser" />
    </dubbo:reference>

</beans>